{"version":3,"file":"static/js/272.c9e7291a.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Herosection/Herosection.module.css?869f","components/Herosection/Herosection.jsx","../node_modules/@mui/material/Grid/GridContext.js","../node_modules/@mui/material/Grid/gridClasses.js","../node_modules/@mui/material/Grid/Grid.js","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"decoration\":\"Herosection_decoration__P2iPp\",\"decoration_vector\":\"Herosection_decoration_vector__gHxeV\",\"decoration_strawberry\":\"Herosection_decoration_strawberry__W4DE3\",\"decoration_leaves\":\"Herosection_decoration_leaves__GGQoE\",\"decoration_banana\":\"Herosection_decoration_banana__LNvBp\"};","import React from \"react\";\nimport styles from \"./Herosection.module.css\";\n\nexport function Hero() {\n  return (\n    <section className={styles.decoration}>\n      <div className={styles.decoration_vector}></div>\n      <div className={styles.decoration_strawberry}></div>\n      <div className={styles.decoration_leaves}></div>\n      <div className={styles.decoration_banana}></div>\n    </section>\n  );\n}\n","'use client';\n\nimport * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst GridContext = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  GridContext.displayName = 'GridContext';\n}\nexport default GridContext;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getGridUtilityClass(slot) {\n  return generateUtilityClass('MuiGrid', slot);\n}\nconst SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst DIRECTIONS = ['column-reverse', 'column', 'row-reverse', 'row'];\nconst WRAPS = ['nowrap', 'wrap-reverse', 'wrap'];\nconst GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nconst gridClasses = generateUtilityClasses('MuiGrid', ['root', 'container', 'item', 'zeroMinWidth',\n// spacings\n...SPACINGS.map(spacing => `spacing-xs-${spacing}`),\n// direction values\n...DIRECTIONS.map(direction => `direction-xs-${direction}`),\n// wrap values\n...WRAPS.map(wrap => `wrap-xs-${wrap}`),\n// grid sizes for all breakpoints\n...GRID_SIZES.map(size => `grid-xs-${size}`), ...GRID_SIZES.map(size => `grid-sm-${size}`), ...GRID_SIZES.map(size => `grid-md-${size}`), ...GRID_SIZES.map(size => `grid-lg-${size}`), ...GRID_SIZES.map(size => `grid-xl-${size}`)]);\nexport default gridClasses;","'use client';\n\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"columns\", \"columnSpacing\", \"component\", \"container\", \"direction\", \"item\", \"rowSpacing\", \"spacing\", \"wrap\", \"zeroMinWidth\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useTheme from '../styles/useTheme';\nimport GridContext from './GridContext';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction getOffset(val) {\n  const parse = parseFloat(val);\n  return `${parse}${String(val).replace(String(parse), '') || 'px'}`;\n}\nexport function generateGrid({\n  theme,\n  ownerState\n}) {\n  let size;\n  return theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n    // Use side effect over immutability for better performance.\n    let styles = {};\n    if (ownerState[breakpoint]) {\n      size = ownerState[breakpoint];\n    }\n    if (!size) {\n      return globalStyles;\n    }\n    if (size === true) {\n      // For the auto layouting\n      styles = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n    } else if (size === 'auto') {\n      styles = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        flexShrink: 0,\n        maxWidth: 'none',\n        width: 'auto'\n      };\n    } else {\n      const columnsBreakpointValues = resolveBreakpointValues({\n        values: ownerState.columns,\n        breakpoints: theme.breakpoints.values\n      });\n      const columnValue = typeof columnsBreakpointValues === 'object' ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues;\n      if (columnValue === undefined || columnValue === null) {\n        return globalStyles;\n      }\n      // Keep 7 significant numbers.\n      const width = `${Math.round(size / columnValue * 10e7) / 10e5}%`;\n      let more = {};\n      if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n        const themeSpacing = theme.spacing(ownerState.columnSpacing);\n        if (themeSpacing !== '0px') {\n          const fullWidth = `calc(${width} + ${getOffset(themeSpacing)})`;\n          more = {\n            flexBasis: fullWidth,\n            maxWidth: fullWidth\n          };\n        }\n      }\n\n      // Close to the bootstrap implementation:\n      // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n      styles = _extends({\n        flexBasis: width,\n        flexGrow: 0,\n        maxWidth: width\n      }, more);\n    }\n\n    // No need for a media query for the first size.\n    if (theme.breakpoints.values[breakpoint] === 0) {\n      Object.assign(globalStyles, styles);\n    } else {\n      globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n    }\n    return globalStyles;\n  }, {});\n}\nexport function generateDirection({\n  theme,\n  ownerState\n}) {\n  const directionValues = resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  });\n  return handleBreakpoints({\n    theme\n  }, directionValues, propValue => {\n    const output = {\n      flexDirection: propValue\n    };\n    if (propValue.indexOf('column') === 0) {\n      output[`& > .${gridClasses.item}`] = {\n        maxWidth: 'none'\n      };\n    }\n    return output;\n  });\n}\n\n/**\n * Extracts zero value breakpoint keys before a non-zero value breakpoint key.\n * @example { xs: 0, sm: 0, md: 2, lg: 0, xl: 0 } or [0, 0, 2, 0, 0]\n * @returns [xs, sm]\n */\nfunction extractZeroValueBreakpointKeys({\n  breakpoints,\n  values\n}) {\n  let nonZeroKey = '';\n  Object.keys(values).forEach(key => {\n    if (nonZeroKey !== '') {\n      return;\n    }\n    if (values[key] !== 0) {\n      nonZeroKey = key;\n    }\n  });\n  const sortedBreakpointKeysByValue = Object.keys(breakpoints).sort((a, b) => {\n    return breakpoints[a] - breakpoints[b];\n  });\n  return sortedBreakpointKeysByValue.slice(0, sortedBreakpointKeysByValue.indexOf(nonZeroKey));\n}\nexport function generateRowGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    rowSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && rowSpacing !== 0) {\n    const rowSpacingValues = resolveBreakpointValues({\n      values: rowSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof rowSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: rowSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, rowSpacingValues, (propValue, breakpoint) => {\n      var _zeroValueBreakpointK;\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        return {\n          marginTop: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingTop: getOffset(themeSpacing)\n          }\n        };\n      }\n      if ((_zeroValueBreakpointK = zeroValueBreakpointKeys) != null && _zeroValueBreakpointK.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        marginTop: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingTop: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function generateColumnGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    columnSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && columnSpacing !== 0) {\n    const columnSpacingValues = resolveBreakpointValues({\n      values: columnSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof columnSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: columnSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, columnSpacingValues, (propValue, breakpoint) => {\n      var _zeroValueBreakpointK2;\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        return {\n          width: `calc(100% + ${getOffset(themeSpacing)})`,\n          marginLeft: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingLeft: getOffset(themeSpacing)\n          }\n        };\n      }\n      if ((_zeroValueBreakpointK2 = zeroValueBreakpointKeys) != null && _zeroValueBreakpointK2.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        width: '100%',\n        marginLeft: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingLeft: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function resolveSpacingStyles(spacing, breakpoints, styles = {}) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [styles[`spacing-xs-${String(spacing)}`]];\n  }\n  // in case of object `spacing`\n  const spacingStyles = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      spacingStyles.push(styles[`spacing-${breakpoint}-${String(value)}`]);\n    }\n  });\n  return spacingStyles;\n}\n\n// Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\nconst GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      container,\n      direction,\n      item,\n      spacing,\n      wrap,\n      zeroMinWidth,\n      breakpoints\n    } = ownerState;\n    let spacingStyles = [];\n\n    // in case of grid item\n    if (container) {\n      spacingStyles = resolveSpacingStyles(spacing, breakpoints, styles);\n    }\n    const breakpointsStyles = [];\n    breakpoints.forEach(breakpoint => {\n      const value = ownerState[breakpoint];\n      if (value) {\n        breakpointsStyles.push(styles[`grid-${breakpoint}-${String(value)}`]);\n      }\n    });\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, ...spacingStyles, direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], ...breakpointsStyles];\n  }\n})(({\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box'\n}, ownerState.container && {\n  display: 'flex',\n  flexWrap: 'wrap',\n  width: '100%'\n}, ownerState.item && {\n  margin: 0 // For instance, it's useful when used with a `figure` element.\n}, ownerState.zeroMinWidth && {\n  minWidth: 0\n}, ownerState.wrap !== 'wrap' && {\n  flexWrap: ownerState.wrap\n}), generateDirection, generateRowGap, generateColumnGap, generateGrid);\nexport function resolveSpacingClasses(spacing, breakpoints) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [`spacing-xs-${String(spacing)}`];\n  }\n  // in case of object `spacing`\n  const classes = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      const className = `spacing-${breakpoint}-${String(value)}`;\n      classes.push(className);\n    }\n  });\n  return classes;\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    spacing,\n    wrap,\n    zeroMinWidth,\n    breakpoints\n  } = ownerState;\n  let spacingClasses = [];\n\n  // in case of grid item\n  if (container) {\n    spacingClasses = resolveSpacingClasses(spacing, breakpoints);\n  }\n  const breakpointsClasses = [];\n  breakpoints.forEach(breakpoint => {\n    const value = ownerState[breakpoint];\n    if (value) {\n      breakpointsClasses.push(`grid-${breakpoint}-${String(value)}`);\n    }\n  });\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', ...spacingClasses, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, ...breakpointsClasses]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const {\n    breakpoints\n  } = useTheme();\n  const props = extendSxProp(themeProps);\n  const {\n      className,\n      columns: columnsProp,\n      columnSpacing: columnSpacingProp,\n      component = 'div',\n      container = false,\n      direction = 'row',\n      item = false,\n      rowSpacing: rowSpacingProp,\n      spacing = 0,\n      wrap = 'wrap',\n      zeroMinWidth = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rowSpacing = rowSpacingProp || spacing;\n  const columnSpacing = columnSpacingProp || spacing;\n  const columnsContext = React.useContext(GridContext);\n\n  // columns set with default breakpoint unit of 12\n  const columns = container ? columnsProp || 12 : columnsContext;\n  const breakpointsValues = {};\n  const otherFiltered = _extends({}, other);\n  breakpoints.keys.forEach(breakpoint => {\n    if (other[breakpoint] != null) {\n      breakpointsValues[breakpoint] = other[breakpoint];\n      delete otherFiltered[breakpoint];\n    }\n  });\n  const ownerState = _extends({}, props, {\n    columns,\n    container,\n    direction,\n    item,\n    rowSpacing,\n    columnSpacing,\n    wrap,\n    zeroMinWidth,\n    spacing\n  }, breakpointsValues, {\n    breakpoints: breakpoints.keys\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: /*#__PURE__*/_jsx(GridRoot, _extends({\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref\n    }, otherFiltered))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid);\n  // eslint-disable-next-line no-useless-concat\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\nexport default Grid;","import * as React from 'react';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { useNavigate } from 'react-router-dom';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { selectIsAuthLoading } from 'redux/auth/selectors';\nimport { Loader } from 'components/Loader/Loader';\n\nconst theme = createTheme({\n  components: {\n    MuiContainer: {\n      styleOverrides: {\n        root: {\n          marginLeft: '50px',\n          marginTop: \"200px\",\n\n        },\n      },\n    },\n  MuiButton : {\n    styleOverrides: {\n      root: {\n        \"&:hover\": {\n          backgroundColor:\"rgba(252, 132, 45, 1)\",\n          color: \"white\",\n        },\n      },\n    },\n  },\n  MuiInput: {\n    styleOverrides: {\n       root: {\n        '&::after': {\n          borderBottom: '2px solid rgba(252, 132, 45, 1)',\n        },\n        fontFamily: 'verdana',\n        fontWeight: '700',\n        fontSize: '14px',\n        lineHeight: '17.01px',\n        letterSpacing: '4%',\n         \n      },\n    },\n  },\n  }\n  },)\n\n\n  const ButtonBox = styled(Box)`\n  display: flex;\n  gap: 30px;\n`;\n\n\nexport function RegisterForm() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const authOperation = useSelector(selectIsAuthLoading);\n\n  \n  const handleSubmit = async event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    try {\n      await dispatch(\n        register({\n          name: form.elements.name.value,\n          email: form.elements.email.value,\n          password: form.elements.password.value,\n        })\n      ).unwrap();\n      form.reset();\n      Notify.success('Congratulations, you have successfully registered!');\n    } catch (error) {\n      Notify.failure('User already exist');\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n    <Container\n      component=\"main\"\n      maxWidth=\"xs\"\n       \n    >\n      <CssBaseline />\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n           \n        }}\n      >\n       <Typography component=\"h1\" variant=\"h5\" fontSize=\"14px\" fontFamily=\"Verdana\" fontWeight='700' textTransform=\"uppercase\" color=\"rgba(252, 132, 45, 1)\" >\nRegister          </Typography>\n        <Box\n          component=\"form\"\n          autoComplete=\"off\"\n          noValidate\n          onSubmit={handleSubmit}\n          sx={{ mt: 3 }}\n        >\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"given-name\"\n                name=\"name\"\n                required\n                fullWidth\n                id=\"name\"\n                label=\"Name\"\n                variant=\"standard\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email\"\n                name=\"email\"\n                autoComplete=\"email\"\n                variant=\"standard\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                variant=\"standard\"\n               \n              />\n            </Grid>\n          </Grid>\n          <ButtonBox>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2,  \n              fontFamily: \"Verdana\",\n              fontSize: '14px', \n              textTransform: \"unset\",\n              borderRadius: \"30px\",\n              boxShadow: \"0px 4px 10px 0px rgba(252, 132, 45, 0.5)\",\n              fontWeight: \"700\",\n              width: \"210px\",\n              height: \"43px\",\n             marginTop: \"35px\",\n             backgroundColor:\"rgba(252, 132, 45, 1)\",\n            }}\n          >\n            {authOperation === 'register' ? <Loader /> : <>Register</>}\n          </Button>\n          <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2,  \n                color: \"rgba(252, 132, 45, 1)\",\n                fontFamily: \"Verdana\",\n                fontSize: '14px', \n                textTransform: \"unset\",\n                borderRadius: \"30px\",\n                boxShadow: \"0px 4px 10px 0px rgba(252, 132, 45, 0.5)\",\n                fontWeight: \"700\",\n                width: \"210px\",\n                height: \"43px\",\n               marginTop: \"35px\",\n               backgroundColor:\"white\",\n              }}\n              onClick={() => navigate('/login')}\n            >\n                <>Log in</>\n            </Button> \n            </ButtonBox>\n        </Box>\n      </Box>\n    </Container>\n    </ThemeProvider>\n  );\n}\n","import \"@fontsource/ubuntu/400.css\";\nimport \"@fontsource/ubuntu/500.css\";\nimport \"@fontsource/ubuntu/700.css\";\nimport { RegisterForm } from \"components/RegisterForm/RegisterForm\";\nimport { Helmet } from \"react-helmet\";\nimport { Hero } from \"components/Herosection/Herosection\";\n\nconst Register = () => {\n  return (\n    <>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <Hero />\n      <RegisterForm />\n    </>\n  );\n};\n\nexport default Register;\n"],"names":["Hero","className","styles","React","getGridUtilityClass","slot","generateUtilityClass","GRID_SIZES","generateUtilityClasses","map","spacing","direction","wrap","size","_excluded","getOffset","val","parse","parseFloat","String","replace","extractZeroValueBreakpointKeys","breakpoints","values","nonZeroKey","Object","keys","forEach","key","sortedBreakpointKeysByValue","sort","a","b","slice","indexOf","GridRoot","styled","name","overridesResolver","props","ownerState","container","item","zeroMinWidth","spacingStyles","Number","isNaN","breakpoint","value","push","resolveSpacingStyles","breakpointsStyles","root","_extends","boxSizing","display","flexWrap","width","margin","minWidth","theme","directionValues","resolveBreakpointValues","handleBreakpoints","propValue","output","flexDirection","gridClasses","maxWidth","rowSpacing","zeroValueBreakpointKeys","rowSpacingValues","_zeroValueBreakpointK","themeSpacing","marginTop","paddingTop","includes","columnSpacing","columnSpacingValues","_zeroValueBreakpointK2","marginLeft","paddingLeft","reduce","globalStyles","flexBasis","flexGrow","flexShrink","columnsBreakpointValues","columns","columnValue","undefined","Math","round","more","fullWidth","assign","up","useUtilityClasses","classes","spacingClasses","resolveSpacingClasses","breakpointsClasses","slots","composeClasses","Grid","inProps","ref","themeProps","useThemeProps","useTheme","extendSxProp","columnsProp","columnSpacingProp","component","rowSpacingProp","other","_objectWithoutPropertiesLoose","columnsContext","GridContext","breakpointsValues","otherFiltered","_jsx","children","clsx","as","createTheme","components","MuiContainer","styleOverrides","MuiButton","backgroundColor","color","MuiInput","borderBottom","fontFamily","fontWeight","fontSize","lineHeight","letterSpacing","ButtonBox","Box","RegisterForm","dispatch","useDispatch","navigate","useNavigate","authOperation","useSelector","selectIsAuthLoading","handleSubmit","event","preventDefault","form","currentTarget","register","elements","email","password","unwrap","reset","Notify","ThemeProvider","Container","CssBaseline","sx","Typography","variant","textTransform","autoComplete","noValidate","onSubmit","mt","xs","TextField","required","id","label","autoFocus","type","Button","mb","borderRadius","boxShadow","height","Loader","onClick","Helmet"],"sourceRoot":""}